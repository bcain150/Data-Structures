Grading Test Log for bcain1:


===============================================================================
>>> Category 0: Misc.
===============================================================================
===============================================================================
| [M.1] [M.2] [M.3] Symbolic link test
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv


=@@@ GRADE_ENTRY 0 pts: [M.1] q1.cpp was not a symbolic link (-5 penalty)

=@@@ GRADE_ENTRY 0 pts: [M.2] q2.cpp was not a symbolic link (-5 penalty)

=@@@ GRADE_ENTRY 0 pts: [M.3] q3.cpp was not a symbolic link (-5 penalty)


===============================================================================
>>> Category 1: Submission, Compilation
===============================================================================
===============================================================================
| [1.1] q1.cpp submitted
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv


=@@@ GRADE_ENTRY 1 pts: [1.1] q1.cpp submitted
===============================================================================
| [1.2] q1.cpp compiles
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv


=@@@ GRADE_ENTRY 2 pts: [1.2] q1.cpp compiles
===============================================================================
| [1.3] [1.4] [1.5] Other tests
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

*** ../../../h2scripts/TEST_FILES/q1.cpp-stub	2018-10-14 18:58:49.000000001 -0400
--- q1.cpp	2018-09-20 14:04:55.000000001 -0400
***************
*** 7,19 ****
    int part2 ;
  } ;
  
- 
  int main() {
  
     Two * dp[10] ;
  
     // fill in code here
  
  
     return 0 ;
  }
--- 7,24 ----
    int part2 ;
  } ;
  
  int main() {
  
     Two * dp[10] ;
  
     // fill in code here
+    for(int i=0; i < 10; i++){
+      dp[i] = new Two();
+      dp[i] -> part1 = 0;
+      dp[i] -> part2 = 0;
  
+      delete dp[i];
+    }
  
     return 0 ;
  }
\ No newline at end of file
[Examine code above]

?@@@ GRADE_ENTRY 2 pts: [1.3] allocate space for each Two object

?@@@ GRADE_ENTRY 1 pts: [1.4] each Two object allocated w/separate "new"

?@@@ GRADE_ENTRY 2 pts: [1.5] initialize part1 and part2
===============================================================================
| [2.1] q2.cpp submitted
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv


=@@@ GRADE_ENTRY 1 pts: [2.1] q2.cpp submitted
===============================================================================
| [2.2] q2.cpp compiles
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv


=@@@ GRADE_ENTRY 2 pts: [2.2] q2.cpp compiles
===============================================================================
| [2.3] [2.4] [2.5] Other tests
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

*** ../../../h2scripts/TEST_FILES/q2.cpp-stub	2018-10-14 18:59:05.000000001 -0400
--- q2.cpp	2018-09-20 00:05:01.000000001 -0400
***************
*** 5,10 ****
--- 5,16 ----
  // add your implementation of the initialize() function here
  // (do not edit any other line of this file)
  //
+ void initialize(int *&p, int s) {
+     p = new int[s];
+     for(int i=0; i<s; i++){
+         p[i] = i;
+     }
+ }
  
  int main() {
     int *ptr ;
[Examine code above]

?@@@ GRADE_ENTRY 2 pts: [2.3] initialize() passes ptr by reference

?@@@ GRADE_ENTRY 2 pts: [2.4] allocates memory for array

?@@@ GRADE_ENTRY 1 pts: [2.5] initializes array
=@@@ GRADE_ENTRY 1 pts: [2.6] executes correctly--PASSED

===============================================================================
| [3.1] q3.cpp submitted
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv


=@@@ GRADE_ENTRY 1 pts: [3.1] q3.cpp submitted
===============================================================================
| [3.2] q3.cpp compiles
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv


=@@@ GRADE_ENTRY 2 pts: [3.2] q3.cpp compiles
===============================================================================
| [3.3] Test case
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

4 9 10 3 7 2 1 6 8 5 

=@@@ GRADE_ENTRY 2 pts: [3.3] main3a.cpp prints out 1 thru 10 once each--PASSED

===============================================================================
| [3.4] Test case
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

1 6 3 5 7 2 4 

=@@@ GRADE_ENTRY 2 pts: [3.4] main3b.cpp prints out 1 thru 7 once each--PASSED

===============================================================================
| [3.5] Test case
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

-3 -2 3 -1 2 0 1 

=@@@ GRADE_ENTRY 2 pts: [3.5] main3c.cpp prints out -3 thru 3 once each--PASSED

    srand(seed);
        num = rand()%n;
=@@@ GRADE_ENTRY 1 pts: [3.6] uses rand() function--PASSED

===============================================================================
| [4.1] [4.2] [4.3] typescript submitted, has valgrind results
vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv


=@@@ GRADE_ENTRY 1 pts: [4.1] typescript submitted
[bcain1@linux1 hw2]valgrind q1.out
[bcain1@linux1 hw2]valgrind q2.out
[bcain1@linux1 hw2]valgrind q3.out

?@@@ GRADE_ENTRY 1 pts: [4.2] typescript shows use of valgrind for q2

?@@@ GRADE_ENTRY 1 pts: [4.3] typescript shows use of valgrind for q3


===============================================================================
>>> ADDITIONAL GRADER COMMENTS
===============================================================================
<Automatic grading results--may be adjusted>
